<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ansible Collaborative (Posts about event-driven-ansible)</title><link>https://ansible.com/</link><description></description><atom:link href="https://ansible.com/categories/event-driven-ansible.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2024 &lt;a href="mailto:website@ansible.community"&gt;Ansible Collaborative, et al&lt;/a&gt; </copyright><lastBuildDate>Thu, 21 Mar 2024 14:38:22 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Event-Driven Ansible is Here</title><link>https://ansible.com/blog/event-driven-ansible-is-here/</link><dc:creator>Joe Pisciotta</dc:creator><description>&lt;p&gt;As you may recall, we introduced Event-Driven Ansible in developer preview last fall at AnsibleFest. Since that time, much work has been done across the community, the Red Hat development teams, customers, and last but not least, Red Hat partners. Today, &lt;a href="https://www.redhat.com/en/about/press-releases/red-hat-accelerates-it-automation-event-driven-ansible"&gt;we are pleased to announce&lt;/a&gt; that Event-Driven Ansible will be concluding its developer preview and will become generally available as part of Red Hat Ansible Automation Platform 2.4.&lt;/p&gt;
&lt;p&gt;If you are new to Event-Driven Ansible, check out the &lt;a href="https://www.ansible.com/blog/introducing-event-driven-ansible"&gt;developer preview blog&lt;/a&gt; I wrote last fall to learn the basics, and you may also be interested in this &lt;a href="https://www.youtube.com/watch?v=PtevBKX1SYI&amp;amp;list=PLdu06OJoEf2a3fFl6uaoyGV526ilwD97R&amp;amp;index=3"&gt;video on Ansible Rulebooks&lt;/a&gt;, as well as others in this playlist.&lt;/p&gt;
&lt;h3&gt;Transform your work with Event-Driven Ansible&lt;/h3&gt;
&lt;p&gt;For many IT teams, there is too much work to do and not enough time to get it all done. Event-Driven Ansible can help your team work smarter, not harder. How often are you doing routine tasks that get in the way of key priorities? How often are you needing to "drop everything" to respond to a ticket enrichment request or handle a user administration issue? Have you had to wake up at night to remediate an issue? How often are you adjusting applications and underlying technologies to support fluctuating workloads?&lt;/p&gt;
&lt;p&gt;You will be happy to know there is a better way, and it is event-driven automation. Many pieces of recurring operational logic and processes can be automated by capturing them in Ansible Rulebooks, including issue remediation, fact gathering for service tickets, user administration tasks, and many more. But what are Ansible Rulebooks? Based on YAML, they are the basis of Event-Driven Ansible and contain conditional "if-this-then-that" logic.&lt;/p&gt;
&lt;p&gt;Event-Driven Ansible can also be used with scalability logic, or using rulebooks to codify scalability actions for rapid and seamless response, such as adding capacity or adjusting buffer pool size when an application or workload calls for it, or scaling out hybrid-cloud solutions when certain conditions are met, and so on.&lt;/p&gt;
&lt;p&gt;Event-driven patterns of automation make it faster to act on recurring events and also provide a simple way of distributing operational or scalability knowledge as an easy to read and verifiable structure. Event-Driven Ansible is accessible enough to be used by IT domain experts to solve a range of needs across use cases including infrastructure, networking, security, cloud and others.&lt;/p&gt;
&lt;p&gt;When your organization adopts event-driven automation techniques, your entire team can execute in a consistent and accurate way. You gain new levels of efficiency and can better focus on the innovations that give your business an edge.&lt;/p&gt;
&lt;h3&gt;New features and enhancements&lt;/h3&gt;
&lt;p&gt;What can you expect from Event-Driven Ansible as part of this release? Several new components and features have been added.  These include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Event-Driven Ansible controller&lt;/strong&gt;, which enables orchestration of multiple rulebooks and provides a single interface to manage and audit all responses across all event sources. These event sources are often third party monitoring and observability tools, but can be any source that provides intelligence about your IT environment.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Integration with automation controller in Ansible Automation Platform&lt;/strong&gt;, which allows you to call existing workflows that you’ve already built using the run_job_template action, thus extending existing, trusted automation into event-driven automation scenarios. This is an optional way to specify actions from within rulebooks. You can also call an existing Ansible Playbook within your rulebooks, if you prefer.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Event throttling&lt;/strong&gt;, which allows you to handle "event storms" using either a reactive approach with the once_within &lt;time&gt; condition or a passive approach with the once_after &lt;time&gt; condition. This allows greater control over when and how actions are executed in response to many events. The Event-Driven Ansible controller also allows default throttling mechanisms that limit scenarios which may result in a greater number of actions than anticipated.&lt;/time&gt;&lt;/time&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Event-Driven Ansible ecosystem integrations&lt;/h3&gt;
&lt;p&gt;An ecosystem of Ansible Content Collections is important for Event-Driven Ansible because it works on the intelligence of changing IT conditions that come from event sources such as third party monitoring and observability tools. Ansible Content Collections are a variety of assets that help you jumpstart new automation projects. In the Event-Driven Ansible case, these assets typically are source plug-ins and rulebooks, but may also include other types of useful content. Red Hat Ansible Certified Content Collections are supported by Red Hat and/or partners and typically focus on the "how-to" of some type of automation. Ansible validated content focuses more on "what-to-do" scenarios, including best practices.&lt;/p&gt;
&lt;p&gt;There has been extensive work done across the Event-Driven Ansible ecosystem in terms of new content, by both the community and third party Red Hat partners. The following is an overview of the work that has been done and what is to come:&lt;/p&gt;
&lt;h4&gt;Certified and validated content&lt;/h4&gt;
&lt;p&gt;The initial list of partners who are or will be certifying or validating content includes: Cisco ThousandEyes, CrowdStrike, CyberArk, Dynatrace, F5, IBM, Palo Alto Networks, and Zabbix and there are more to come. Red Hat has also developed key integrations including  Apache Kafka, webhooks, Red Hat Insights, Red Hat OpenShift, Cisco NX-OS and Model-Driven Telemetry, AWS and more. Refer to the image below. More integrations are coming soon, including ServiceNow, Microsoft Azure, Google Cloud Platform and others.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Certified Content for Event-Driven Ansible generally is  certified event source plugins, written in python, which connect an event source to Ansible Rulebooks. Validated Content for Event-Driven Ansible is generally Ansible Rulebooks which have been validated and contains best practices for common use cases.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Community- and custom-developed content&lt;/h4&gt;
&lt;p&gt;Community and custom content is available either upstream or through private customer sources. Community-developed integrations have included gcp pubsub and syslogd, among others.&lt;/p&gt;
&lt;p&gt;Whether you have homegrown monitoring tools or need a specific solution immediately, you can build your own plug-ins for Event-Driven Ansible. Once you build your plug-in, consider whether this can be contributed to the Ansible community.&lt;/p&gt;
&lt;h3&gt;Getting Involved with Event-Driven Ansible&lt;/h3&gt;
&lt;p&gt;Ready to start exploring Event-Driven Ansible? There are a number of ways to do this.  Visit &lt;a href="https://www.redhat.com/en/technologies/management/ansible/event-driven-ansible"&gt;Red Hat's Event-Driven Ansible page&lt;/a&gt; where you will find a series of free, self-paced interactive labs, information and analyst research.&lt;/p&gt;
&lt;p&gt;You can also join a getting started with &lt;a href="https://www.redhat.com/en/events/webinar/work-smarter-using-event-driven-automation-across-IT-operations"&gt;Event-Driven Ansiblewebinar&lt;/a&gt; on June 20, 2023.&lt;/p&gt;
&lt;h3&gt;Additional resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com/en/about/press-releases/red-hat-accelerates-it-automation-event-driven-ansible"&gt;Press release: Red Hat Accelerates IT Automation with Event-Driven Ansible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com/en/technologies/management/ansible/event-driven-ansible"&gt;Web page: Event-Driven Ansible&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/watch?v=PtevBKX1SYI"&gt;Video: Creating Ansible Rulebooks&lt;/a&gt;  and &lt;a href="https://www.youtube.com/watch?v=TH7_OqBmXD4&amp;amp;list=PLdu06OJoEf2a3fFl6uaoyGV526ilwD97R"&gt;Event-Driven Ansible playlist&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com/en/events/webinar/work-smarter-using-event-driven-automation-across-IT-operations"&gt;Event-Driven Ansible webinar&lt;/a&gt;, June 20, 2023&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com/en/engage/event-driven-ansible-20220907"&gt;Event-Driven Ansible self paced labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;451 Research paper: &lt;a href="https://www.redhat.com/en/resources/event-driven-impact-on-it-operations-analyst-material"&gt;The Impact of Event-Driven Automation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com/en/engage/build-innovation-automation-20230414"&gt;Event-driven automation e-book&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description><category>announcement</category><category>eda</category><category>event-driven-ansible</category><category>release</category><guid>https://ansible.com/blog/event-driven-ansible-is-here/</guid><pubDate>Tue, 23 May 2023 13:00:00 GMT</pubDate></item><item><title>Kubernetes Meets Event-Driven Ansible</title><link>https://ansible.com/blog/kubernetes-meets-event-driven-ansible/</link><dc:creator>Andrew Block</dc:creator><description>&lt;h2&gt;Kubernetes Meets Event-Driven Ansible&lt;/h2&gt;
&lt;p&gt;In today's fast-paced world, every second counts and the ability to react to activities in a timely fashion can mean the difference between satisfying the needs of consumers and meeting Service-Level Agreements. Each are goals of &lt;a href="https://www.ansible.com/use-cases/event-driven-automation"&gt;Event-Driven Ansible&lt;/a&gt;, which seeks to further the reach of Ansible based automation by responding to events that meet certain criteria. These events can originate from a variety of sources, such as from an HTTP endpoint, messages on a queue or topic, or from public cloud resources. Kubernetes has become synonymous with managing infrastructure and applications in cloud native architectures and many organizations are reliant on these systems for running their business critical workloads. Automation and Kubernetes go hand in hand and Ansible already plays a role within this ecosystem. A new capability leveraging the Event-Driven Ansible framework is now available that extends the integration between both Ansible and Kubernetes so that Ansible automation activities can be triggered based on events and actions occurring within a Kubernetes cluster.&lt;/p&gt;
&lt;p&gt;Event-Driven Ansible is designed using a concept called Rulebooks which consists of three main components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Actions - Triggering the execution of assets including an Ansible Playbook or module&lt;/li&gt;
&lt;li&gt;Rules - Determination of whether received events match certain conditions&lt;/li&gt;
&lt;li&gt;Sources - Origination of events from external entities that are consumed and processed within the Ansible eventing framework&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is a wide ecosystem of solutions available to manage Kubernetes from Ansible, which is provided primarily through the &lt;a href="https://github.com/ansible-collections/kubernetes.core"&gt;kubernetes.core collection&lt;/a&gt;. This Collection contains everything ranging from mechanisms to manage resources within a Kubernetes cluster, support for the Helm package manager to leveraging a Kubernetes cluster as an inventory source. There are capabilities made available now through the integration of Kubernetes and the Event-Driven Ansible framework. Event sources enable the consumption of changes originating from a Kubernetes cluster, which can be used to trigger automation to respond and act based on the received content and the configured rules. Let’s explore how to take advantage of this newly created capability to further the integration between Kubernetes and Ansible.&lt;/p&gt;
&lt;p&gt;The assets related to Event-Driven Ansible and Kubernetes are located within the &lt;a href="https://galaxy.ansible.com/sabre1041/eda"&gt;sabre1041.eda collection&lt;/a&gt; within Ansible Galaxy. Ensure that the control node where the Ansible automation will be executed has the necessary tooling installed and configured. This includes Ansible Core, the tooling associated with Event-Driven Ansible, and the Collection containing the Event-Driven Ansible Kubernetes integration. Consult the associated documentation for both &lt;a href="https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html"&gt;Ansible Core&lt;/a&gt; and &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_ansible_automation_platform/"&gt;Event-Driven Ansible&lt;/a&gt; for the target Operating System and installation method.&lt;/p&gt;
&lt;p&gt;Once both Ansible Core and Event-Driven Ansible have been installed and configured, install the sabre1041.eda collection by executing the following command:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;ansible-galaxy&lt;span class="w"&gt; &lt;/span&gt;collection&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;sabre1041.eda
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This Collection also requires that the Python &lt;a href="https://requests.readthedocs.io/en/latest/"&gt;requests&lt;/a&gt; package be installed which can be facilitated by executing the following command:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;requests
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that all of the prerequisite tooling has been met, attention can be turned to how a Rulebook can be configured to take advantage of the Kubernetes integration. Events in the Event-Driven Ansible architecture are configured within the sources section of a rulebook. One or more sources can be specified within a rulebook enabling a robust set of conditions and actions to be configured.&lt;/p&gt;
&lt;p&gt;A basic rulebook that takes advantage of the k8s event source plugin from the Collection is shown below:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Listen for newly added ConfigMap resources&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;all&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;sources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;sabre1041.eda.k8s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;api_version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;v1&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;kind&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ConfigMap&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;namespace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;default&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Notify&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;event.type == "ADDED"&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The k8s plugin is modeled in a similar manner to that of the &lt;a href="https://docs.ansible.com/ansible/latest/collections/kubernetes/core/k8s_module.html"&gt;k8s module&lt;/a&gt; from the kubernetes.core collection, so anyone with familiarity working with this module will feel at home when working with this k8s source plugin.&lt;/p&gt;
&lt;p&gt;The logic of this rulebook is as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Connect to a remote Kubernetes cluster and consume changes to ConfigMap resources that occur within the default namespace&lt;/li&gt;
&lt;li&gt;The k8s source plugin includes the type and content to the event object whenever a change occurs within the Kubernetes cluster&lt;/li&gt;
&lt;li&gt;Execute the debug action which will print out the event and any other associated variables only when the type property on the event is equal to "ADDED" (whenever a ConfigMap is added to the cluster).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;While this rulebook monitors for changes in a specific namespace, support is available for monitoring changes across an entire Kubernetes cluster by omitting the use of the namespace parameter in the source plugin. If access to the default namespace is forbidden, feel free to select another namespace where access is granted.&lt;/p&gt;
&lt;p&gt;To demonstrate the use of this rulebook, add the previously provided content to a new rulebook file called k8s-eda-demo.yaml. In addition, ensure that the local machine is authenticated to a Kubernetes cluster or customize the plugin parameters to specify the location of the Kubernetes cluster that should be used. Consult the &lt;a href="https://github.com/sabre1041/sabre1041.eda/blob/main/docs/sabre1041.eda.k8s_source_plugin.rst"&gt;plugin documentation&lt;/a&gt; for the available options.&lt;/p&gt;
&lt;p&gt;Create a simple &lt;a href="https://docs.ansible.com/ansible/latest//inventory_guide/intro_inventory.html#intro-inventory"&gt;inventory&lt;/a&gt; in a file called inventory with the following content:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;localhost
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run the rulebook to begin consuming events by executing the following command:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;ansible-rulebook&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;inventory&lt;span class="w"&gt; &lt;/span&gt;--rulebook&lt;span class="w"&gt; &lt;/span&gt;k8s-eda-demo.yaml&lt;span class="w"&gt; &lt;/span&gt;--verbose
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With the rulebook monitoring for ConfigMap changes in the default namespace, create a new ConfigMap in the default namespace to demonstrate events are being captured appropriately. This task can be accomplished by using the Kubernetes CLI (kubectl) by executing the following command:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;configmap&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;default&lt;span class="w"&gt; &lt;/span&gt;eda-example&lt;span class="w"&gt; &lt;/span&gt;--from-literal&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Kubernetes Meets Event-Driven Ansible"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Observe the following has been captured and displayed in the window where the ansible-rulebook command is being executed.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kwargs:
&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'facts'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{}&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'hosts'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'all'&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'inventory'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'localhost'&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'project_data_file'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;None,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'ruleset'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Listen for newly added ConfigMap resources'&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'source_rule_name'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Notify'&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'source_ruleset_name'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Listen for newly added ConfigMap resources'&lt;/span&gt;,
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'variables'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'event'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'resource'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'apiVersion'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'v1'&lt;/span&gt;,
&lt;span class="w"&gt;                                      &lt;/span&gt;&lt;span class="s1"&gt;'data'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'message'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Kubernetes Meets '&lt;/span&gt;
&lt;span class="w"&gt;                                                          &lt;/span&gt;&lt;span class="s1"&gt;'Event-Driven '&lt;/span&gt;
&lt;span class="w"&gt;                                                          &lt;/span&gt;&lt;span class="s1"&gt;'Ansible'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="w"&gt;                                      &lt;/span&gt;&lt;span class="s1"&gt;'kind'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'ConfigMap'&lt;/span&gt;,
&lt;span class="w"&gt;                                      &lt;/span&gt;&lt;span class="s1"&gt;'metadata'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'creationTimestamp'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'2022-12-25T17:40:43Z'&lt;/span&gt;,
&lt;span class="w"&gt;                                                   &lt;/span&gt;&lt;span class="s1"&gt;'managedFields'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;'apiVersion'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'v1'&lt;/span&gt;,
&lt;span class="w"&gt;                                                                      &lt;/span&gt;&lt;span class="s1"&gt;'fieldsType'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'FieldsV1'&lt;/span&gt;,
&lt;span class="w"&gt;                                                                      &lt;/span&gt;&lt;span class="s1"&gt;'fieldsV1'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'f:data'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{}&lt;/span&gt;,
&lt;span class="w"&gt;                                                                                              &lt;/span&gt;&lt;span class="s1"&gt;'f:message'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{}}}&lt;/span&gt;,
&lt;span class="w"&gt;                                                                      &lt;/span&gt;&lt;span class="s1"&gt;'manager'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'kubectl-create'&lt;/span&gt;,
&lt;span class="w"&gt;                                                                      &lt;/span&gt;&lt;span class="s1"&gt;'operation'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Update'&lt;/span&gt;,
&lt;span class="w"&gt;                                                                      &lt;/span&gt;&lt;span class="s1"&gt;'time'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'2022-12-25T17:40:43Z'&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;,
&lt;span class="w"&gt;                                                   &lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'eda-example'&lt;/span&gt;,
&lt;span class="w"&gt;                                                   &lt;/span&gt;&lt;span class="s1"&gt;'namespace'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'default'&lt;/span&gt;,
&lt;span class="w"&gt;                                                   &lt;/span&gt;&lt;span class="s1"&gt;'resourceVersion'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'119407'&lt;/span&gt;,
&lt;span class="w"&gt;                                                   &lt;/span&gt;&lt;span class="s1"&gt;'uid'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'2862db59-8990-4a37-9433-50dcfbaa6d71'&lt;/span&gt;&lt;span class="o"&gt;}}&lt;/span&gt;,
&lt;span class="w"&gt;                         &lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'ADDED'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="w"&gt;               &lt;/span&gt;&lt;span class="s1"&gt;'fact'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'resource'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'apiVersion'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'v1'&lt;/span&gt;,
&lt;span class="w"&gt;                                     &lt;/span&gt;&lt;span class="s1"&gt;'data'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'message'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Kubernetes Meets '&lt;/span&gt;
&lt;span class="w"&gt;                                                         &lt;/span&gt;&lt;span class="s1"&gt;'Event-Driven '&lt;/span&gt;
&lt;span class="w"&gt;                                                         &lt;/span&gt;&lt;span class="s1"&gt;'Ansible'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,
&lt;span class="w"&gt;                                     &lt;/span&gt;&lt;span class="s1"&gt;'kind'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'ConfigMap'&lt;/span&gt;,
&lt;span class="w"&gt;                                     &lt;/span&gt;&lt;span class="s1"&gt;'metadata'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'creationTimestamp'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'2022-12-25T17:40:43Z'&lt;/span&gt;,
&lt;span class="w"&gt;                                                  &lt;/span&gt;&lt;span class="s1"&gt;'managedFields'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;'apiVersion'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'v1'&lt;/span&gt;,
&lt;span class="w"&gt;                                                                     &lt;/span&gt;&lt;span class="s1"&gt;'fieldsType'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'FieldsV1'&lt;/span&gt;,
&lt;span class="w"&gt;                                                                     &lt;/span&gt;&lt;span class="s1"&gt;'fieldsV1'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'f:data'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'.'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{}&lt;/span&gt;,
&lt;span class="w"&gt;                                                                                             &lt;/span&gt;&lt;span class="s1"&gt;'f:message'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{}}}&lt;/span&gt;,
&lt;span class="w"&gt;                                                                     &lt;/span&gt;&lt;span class="s1"&gt;'manager'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'kubectl-create'&lt;/span&gt;,
&lt;span class="w"&gt;                                                                     &lt;/span&gt;&lt;span class="s1"&gt;'operation'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Update'&lt;/span&gt;,
&lt;span class="w"&gt;                                                                     &lt;/span&gt;&lt;span class="s1"&gt;'time'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'2022-12-25T17:40:43Z'&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;,
&lt;span class="w"&gt;                                                  &lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'eda-example'&lt;/span&gt;,
&lt;span class="w"&gt;                                                  &lt;/span&gt;&lt;span class="s1"&gt;'namespace'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'default'&lt;/span&gt;,
&lt;span class="w"&gt;                                                  &lt;/span&gt;&lt;span class="s1"&gt;'resourceVersion'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'119407'&lt;/span&gt;,
&lt;span class="w"&gt;                                                  &lt;/span&gt;&lt;span class="s1"&gt;'uid'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'2862db59-8990-4a37-9433-50dcfbaa6d71'&lt;/span&gt;&lt;span class="o"&gt;}}&lt;/span&gt;,
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="s1"&gt;'type'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'ADDED'&lt;/span&gt;&lt;span class="o"&gt;}}}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As shown in the output above, the details associated with the newly created ConfigMap within the Kubernetes cluster and the event have been captured.&lt;/p&gt;
&lt;p&gt;After confirming that the Kubernetes source plugin is capturing events successfully, let’s demonstrate how one could make use of these events within an Ansible Playbook. Create a new file called k8s-eda-demo-playbook.yaml with the following content.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;localhost&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;connection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;local&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;tasks&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;ansible.builtin.debug&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;msg&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"ConfigMap&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;in&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;namespace&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;'{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;event.resource.metadata.namespace&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}'&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;with&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;name&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;'{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;event.resource.metadata.name&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;‘{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;event.type&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;|&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;capitalize&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;}}’&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;with&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;the&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;message&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;‘{{&lt;/span&gt;&lt;span class="nv"&gt; &lt;/span&gt;&lt;span class="s"&gt;event.resource.data.message}}'"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This playbook demonstrates how to obtain properties that are included on the captured event. The type property will display "Added" as the playbook will only execute when ConfigMaps that have been created. The ConfigMap object itself can be accessed by referencing the resource property on the event. The standard Kubernetes manifest for a ConfigMap can then be traversed, such as the &lt;em&gt;namespace, name&lt;/em&gt; as well as specific &lt;em&gt;data values&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Update the contents of the rulebook in the k8s-eda-demo.yaml file to invoke the newly created playbook instead of simply printing out the contents by using the run_playbook action as shown below:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Listen for newly added ConfigMap resources&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;all&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;sources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;sabre1041.eda.k8s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;api_version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;v1&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;kind&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ConfigMap&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;namespace&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;default&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Execute Playbook&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;event.type == "ADDED"&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;run_playbook&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;k8s-eda-demo-playbook.yaml&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once again, execute the k8s-eda-demo-playbook.yaml rulebook to begin listing for ConfigMap’s added to the &lt;em&gt;default&lt;/em&gt; namespace.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;ansible-rulebook&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;inventory&lt;span class="w"&gt; &lt;/span&gt;--rulebook&lt;span class="w"&gt; &lt;/span&gt;k8s-eda-demo.yaml&lt;span class="w"&gt; &lt;/span&gt;--verbose
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Delete and recreate the ConfigMap to trigger the playbook.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;kubectl&lt;span class="w"&gt; &lt;/span&gt;delete&lt;span class="w"&gt; &lt;/span&gt;configmap&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;default&lt;span class="w"&gt; &lt;/span&gt;eda-example

kubectl&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;configmap&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;default&lt;span class="w"&gt; &lt;/span&gt;eda-example&lt;span class="w"&gt; &lt;/span&gt;--from-literal&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;message&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"Kubernetes Meets Event-Driven Ansible"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Observe that the playbook has been triggered and produces output similar to the following:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;TASK&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;ansible.builtin.debug&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;***************************************************
ok:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;"msg"&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"ConfigMap in namespace 'default' with name 'eda-example ‘Added’ with the message ‘Kubernetes Meets Event-Driven Ansible'"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;While this example only prints out a simple message related to the content of the event received, it provides a demonstration of how to make use of the capabilities enabled by the Kubernetes integration. By adding Kuberentes as an event source and into the Event-Driven Ansible ecosystem, it becomes an essential integration to help support organizations that are leveraging Kubernetes to maintain crucial components of their business and to trigger automation as desired.&lt;/p&gt;</description><category>ansible-rulebook</category><category>eda</category><category>event-driven-ansible</category><category>kubernetes</category><category>rulebooks</category><guid>https://ansible.com/blog/kubernetes-meets-event-driven-ansible/</guid><pubDate>Thu, 16 Mar 2023 13:00:00 GMT</pubDate></item><item><title>Getting Started with Event-Driven Ansible</title><link>https://ansible.com/blog/getting-started-with-event-driven-ansible/</link><dc:creator>Nuno Martins</dc:creator><description>&lt;h2&gt;Getting Started with Event-Driven Ansible&lt;/h2&gt;
&lt;p&gt;As one technology advances, it expands the possibilities for other technologies and offers the solutions of tomorrow for the challenges we face today. AnsibleFest 2022 brings us new advances in Ansible automation that are as bright as they are innovative. I am talking about the Event-Driven Ansible developer preview.&lt;/p&gt;
&lt;p&gt;Automation allows us to give our systems and technology speed and agility while minimizing human error. However, when it comes to trouble tickets and issues, we are often left to traditional and manual methods of troubleshooting and information gathering. We inherently slow things down and interrupt our businesses. We have to gather information, try our common troubleshooting steps, confirm with different teams, and eventually, we need to sleep.&lt;/p&gt;
&lt;p&gt;The following image illustrates a support lifecycle with many manual steps and hand-offs:&lt;/p&gt;
&lt;p&gt;&lt;img alt="support lifecycle diagram" src="https://ansible.com/images/posts/archive/getting-started-eda-lifecycle-diagram.png"&gt;&lt;/p&gt;
&lt;p&gt;One application of Event-Driven Ansible is to remediate technology issues before near real-time, or at least trigger troubleshooting and information collection in an attempt to find the root cause of an outage while your support teams handle other issues.&lt;/p&gt;
&lt;p&gt;The following image illustrates how event-driven automation is used in the support lifecycle: fewer steps, faster Mean-Time-To-Resolution.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Event-Driven Ansible in the support lifecycle" src="https://ansible.com/images/posts/archive/getting-started-eda-eda.png"&gt;&lt;/p&gt;
&lt;p&gt;Event-Driven Ansible has the potential to change the way we respond to issues and illuminates many new automation possibilities. So, how do you take the next step with Event-Driven Ansible?&lt;/p&gt;
&lt;h2&gt;Let’s get started!&lt;/h2&gt;
&lt;p&gt;Event-Driven Ansible is currently in developer preview, however there is nothing stopping us from installing ansible-rulebook, which is the CLI component of Event-Driven Ansible, and building our first rulebook. Event-Driven Ansible contains a decision framework that was built using Drools. We need a rulebook to tell the system what events to flag and how to respond to them. These rulebooks are also created in YAML and are used like traditional Ansible Playbooks, so this makes it easier to understand and build the rulebooks we need. One key difference between playbooks and rulebooks is the If-this-then-that coding that is needed in a rulebook to make an event driven  automation approach work.&lt;/p&gt;
&lt;p&gt;A rulebook is comprised of three main components:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Sources&lt;/strong&gt; define which event source we will use. These sources come from source plugins which have been built to accommodate common use cases. With time, more and more sources will be available. There are some source plugins that are available already, including: webhooks, Kafka, Azure service bus, file changes, and alertmanager.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Rules&lt;/strong&gt; define conditionals we will try to match from the event source. Should the condition be met, then we can trigger an action.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Actions&lt;/strong&gt; trigger what you need to happen should a condition be met. Some of the current actions are: run_playbook, run_module, set_fact, post_event, and debug.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="getting-started-with-event-driven-ansible" src="https://ansible.com/images/posts/archive/getting-started-eda-event-source.png"&gt;&lt;/p&gt;
&lt;p&gt;Now, let's install ansible-rulebook and start with our very first event.&lt;/p&gt;
&lt;p&gt;To install ansible-rulebook, we can install our Galaxy Collection, which has a playbook to install everything we need.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;ansible-galaxy&lt;span class="w"&gt; &lt;/span&gt;collection&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;ansible.eda
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once the Collection is installed, you can run the install-rulebook-cli.yml playbook. This will install everything you need to get started with ansible-rulebook on the command line. This is currently supported for Mac and Fedora.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Now, you could also skip this method above and install ansible-rulebook with pip, followed by installing the ansible.eda collection. Java 11+ is required if you use this method and we suggest using &lt;a href="https://jdk.java.net/19/"&gt;openjdk&lt;/a&gt;. (This step is not required if you used the previous install method.)&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;ansible-rulebook

ansible-galaxy&lt;span class="w"&gt; &lt;/span&gt;collection&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;ansible.eda
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you want to contribute to ansible-rulebook, you can also fork the following &lt;a href="https://github.com/ansible/ansible-rulebook"&gt;GitHub repository&lt;/a&gt;. This repository also contains instructions for setting up your development environment and how to build a test container.&lt;/p&gt;
&lt;p&gt;Let's build an example rulebook that will trigger an action from a webhook. We will be looking for a specific payload from the webhook, and if that condition is met from the webhook event, then ansible-rulebook will trigger the desired action. Below is our example rulebook:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nn"&gt;---&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Listen for events on a webhook&lt;/span&gt;
&lt;span class="w w-Error"&gt; &lt;/span&gt;&lt;span class="nt"&gt;hosts&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;all&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;## Define our source for events&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;sources&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;ansible.eda.webhook&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="nt"&gt;host&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;0.0.0.0&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="nt"&gt;port&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;5000&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;## Define the conditions we are looking for&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;rules&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Say Hello&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;condition&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;event.payload.message == "Ansible is super cool!"&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;## Define the action we should take should the condition be met&lt;/span&gt;

&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nt"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="nt"&gt;run_playbook&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;         &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;say-what.yml&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If we look at this example, we can see the structure of the rulebook. Our sources, rules and actions are defined. We are using the webhook source plugin from our ansible.eda collection, and we are looking for a message payload from our webhook that contains "Ansible is super cool". Once this condition has been met, our defined action will trigger, which in this case is to trigger a playbook.&lt;/p&gt;
&lt;p&gt;One important thing to take note of ansible-rulebook is that it is not like ansible-playbook which runs a playbook and once the playbook has been completed it will exit. With ansible-rulebook, it will continue to run waiting for events and matching those events. It will only exit upon a shutdown action or if there is an issue with the event source itself, for example if a website you are watching with the url-check plugin stops working.&lt;/p&gt;
&lt;p&gt;With our rulebook built, we will simply tell ansible-rulebook to use it as a ruleset and wait for events:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;root@ansible-rulebook:/root#&lt;span class="w"&gt; &lt;/span&gt;ansible-rulebook&lt;span class="w"&gt; &lt;/span&gt;--rules&lt;span class="w"&gt; &lt;/span&gt;webhook-example.yml&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;inventory.yml&lt;span class="w"&gt; &lt;/span&gt;--verbose

INFO:ansible_events:Starting&lt;span class="w"&gt; &lt;/span&gt;sources
INFO:ansible_events:Starting&lt;span class="w"&gt; &lt;/span&gt;sources
INFO:ansible_events:Starting&lt;span class="w"&gt; &lt;/span&gt;rules
INFO:root:run_ruleset
INFO:root:&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'all'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;'m'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'payload.message'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Ansible is super cool!'&lt;/span&gt;&lt;span class="o"&gt;}}]&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'run'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;make_fn.&amp;lt;locals&amp;gt;.fn&lt;span class="w"&gt; &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;0x7ff962418040&amp;gt;&lt;span class="o"&gt;}&lt;/span&gt;
INFO:root:Waiting&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;event
INFO:root:load&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;
INFO:root:load&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;filters
INFO:root:Calling&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ansible.eda.webhook
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, ansible-rulebook is ready and it's waiting for an event to match. If a webhook is triggered but the payload does not match our condition in our rule, we can see it in the ansible-rulebook verbose output:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;…
INFO:root:Calling&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ansible.eda.webhook
INFO:aiohttp.access:127.0.0.1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;/Oct/2022:09:49:32&lt;span class="w"&gt; &lt;/span&gt;+0000&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"POST /endpoint HTTP/1.1"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;158&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"-"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"curl/7.61.1"&lt;/span&gt;
INFO:root:Waiting&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;event
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But once our payload matches what we are looking for, that’s when the magic happens, so we will simulate a webhook with the correct payload:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;curl&lt;span class="w"&gt; &lt;/span&gt;-H&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Content-Type: application/json'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"{\"message\": \"Ansible is super cool\"}"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1:5000/endpoint

INFO:root:Calling&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ansible.eda.webhook
INFO:aiohttp.access:127.0.0.1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;/Oct/2022:09:50:28&lt;span class="w"&gt; &lt;/span&gt;+0000&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"POST /endpoint HTTP/1.1"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;200&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;158&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"-"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"curl/7.61.1"&lt;/span&gt;
INFO:root:calling&lt;span class="w"&gt; &lt;/span&gt;Say&lt;span class="w"&gt; &lt;/span&gt;Hello
INFO:root:call_action&lt;span class="w"&gt; &lt;/span&gt;run_playbook
INFO:root:substitute_variables&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'say-what.yml'&lt;/span&gt;&lt;span class="o"&gt;}]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[{&lt;/span&gt;&lt;span class="s1"&gt;'event'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'payload'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'message'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Ansible is super cool'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'meta'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'endpoint'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'endpoint'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'headers'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'Host'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'127.0.0.1:5000'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'User-Agent'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'curl/7.61.1'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Accept'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'*/*'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Content-Type'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'application/json'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Content-Length'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'36'&lt;/span&gt;&lt;span class="o"&gt;}}}&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'fact'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'payload'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'message'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Ansible is super cool'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'meta'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'endpoint'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'endpoint'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'headers'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'Host'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'127.0.0.1:5000'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'User-Agent'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'curl/7.61.1'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Accept'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'*/*'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Content-Type'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'application/json'&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'Content-Length'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'36'&lt;/span&gt;&lt;span class="o"&gt;}}}}]&lt;/span&gt;
INFO:root:action&lt;span class="w"&gt; &lt;/span&gt;args:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;'name'&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'say-what.yml'&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
INFO:root:running&lt;span class="w"&gt; &lt;/span&gt;Ansible&lt;span class="w"&gt; &lt;/span&gt;playbook:&lt;span class="w"&gt; &lt;/span&gt;say-what.yml
INFO:root:Calling&lt;span class="w"&gt; &lt;/span&gt;Ansible&lt;span class="w"&gt; &lt;/span&gt;runner

PLAY&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;say&lt;span class="w"&gt; &lt;/span&gt;thanks&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;**************************************************************

TASK&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;debug&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*******************************************************************
ok:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;localhost&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;"msg"&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Thank you, my friend!"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

PLAY&lt;span class="w"&gt; &lt;/span&gt;RECAP&lt;span class="w"&gt; &lt;/span&gt;*********************************************************************
localhost&lt;span class="w"&gt;                  &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;ok&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;changed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;unreachable&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;failed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;skipped&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;rescued&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;ignored&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;

INFO:root:Waiting&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;event
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We can see from the output above, that the condition was met from the webhook and ansible-rulebook then triggered our action which was to run_playbook. The playbook we defined is then triggered and once it completes we can see we revert back to "Waiting for event".&lt;/p&gt;
&lt;p&gt;Event-Driven Ansible opens up the possibilities of faster resolution and greater automated observation of our environments. It has the possibility of simplifying the lives of many technical and sleep-deprived engineers. The current ansible-rulebook is easy to learn and work with, and the graphical user interface EDA-Server will simplify this further.&lt;/p&gt;
&lt;h3&gt;What can you do next?&lt;/h3&gt;
&lt;p&gt;Whether you are beginning your automation journey or a seasoned veteran, there are a variety of resources to enhance your automation knowledge:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.redhat.com/en/engage/redhat-ansible-automation-202108061218"&gt;Self-paced lab exercises&lt;/a&gt; - We have interactive, in-browser exercises to help you get started with Event-Driven Ansible and ansible-rulebook.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/PtevBKX1SYI"&gt;Event-Driven Rulebooks&lt;/a&gt; - Watch another example of Event-Driven Ansible on our YouTube channel.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://youtu.be/Bb51DftLbPE"&gt;Event-Driven Ansible and Gitops&lt;/a&gt; - Watch another example of Event-Driven Ansible, but with GitOps, on our YouTube channel.&lt;/li&gt;
&lt;/ul&gt;</description><category>ansible-rulebook</category><category>eda</category><category>event-driven-ansible</category><category>getting-started</category><category>rulebooks</category><guid>https://ansible.com/blog/getting-started-with-event-driven-ansible/</guid><pubDate>Wed, 19 Oct 2022 13:00:00 GMT</pubDate></item></channel></rss>