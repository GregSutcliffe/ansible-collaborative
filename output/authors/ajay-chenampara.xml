<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Ansible Collaborative (Posts by Ajay Chenampara)</title><link>https://ansible.com/</link><description></description><atom:link href="https://ansible.com/authors/ajay-chenampara.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2024 &lt;a href="mailto:website@ansible.community"&gt;Ansible Collaborative, et al&lt;/a&gt; </copyright><lastBuildDate>Mon, 18 Mar 2024 19:47:35 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Continuous Detection and Mitigation (CDM)</title><link>https://ansible.com/blog/continuous-detection-and-mitigation-cdm/</link><dc:creator>Ajay Chenampara</dc:creator><description>&lt;h2&gt;Continuous Detection and Mitigation (CDM)&lt;/h2&gt;
&lt;p&gt;Per
&lt;a href="https://www.nascio.org/resource-center/resources/state-cio-top-ten-policy-and-technology-priorities-for-2022/"&gt;NASCIO&lt;/a&gt;,
the top priority for state CIOs is cybersecurity and risk management. A
key focus for this initiative is to leverage &lt;a href="https://cisa.gov/cdm"&gt;the Continuous Diagnostics
and Mitigation (CDM) framework&lt;/a&gt; provided by the
Cybersecurity and Infrastructure Security Agency (CISA). In this blog
post we will explore a high level view of the CDM framework, review
Ansible's role in security automation and finally understand how Ansible
can help agencies with Day 0 through Day 2 tasks while working with the
CDM framework.&lt;/p&gt;
&lt;h3&gt;What is CDM?&lt;/h3&gt;
&lt;p&gt;Today more than ever, cyber threats mean that securing and defending our
networks are of utmost importance. A &lt;a href="https://www.nlc.org/wp-content/uploads/2019/10/CS-Cybersecurity-Report-Final_0.pdf"&gt;recent
report&lt;/a&gt;
published by the National League of Cities revealed that an astonishing
44% of local governments report they experience a cyberattack daily or
even hourly. So it is not surprising to see that cybersecurity and risk
management is the number one priority for our state CIOs. With that
background, let's understand the CDM program.&lt;/p&gt;
&lt;p&gt;&lt;img alt="CDM program diagram" src="https://ansible.com/images/posts/archive/cdm-diagram.png"&gt;&lt;/p&gt;
&lt;p&gt;Source: https://www.cisa.gov/cdm-training&lt;/p&gt;
&lt;p&gt;The CDM framework is defined by CISA. CDM provides capabilities and
tools that help identify cybersecurity risks on an ongoing basis,
prioritize these risks and enable cybersecurity personnel to mitigate
them based on priority.&lt;/p&gt;
&lt;p&gt;At its core it provides tools and dashboards that enable cybersecurity
professionals to understand what is on the network, who is on the
network, and what's happening on the network. CISA's CDM is leading that
effort to reduce cyber risk by delivering tools to federal/state
agencies to strengthen their ability to monitor and manage the threat of cyber vulnerabilities.&lt;/p&gt;
&lt;h3&gt;The CDM model&lt;/h3&gt;
&lt;p&gt;The CDM framework provides an opinionated four layer architecture. The
first layer, layer A, consists of sensors and scanners that are deployed
in the network. These scanners and sensors continuously collect data
that match against fingerprints and send it up to the second layer,
layer B, or the integration layer. &lt;/p&gt;
&lt;p&gt;&lt;img alt="CDM model layer a" src="https://ansible.com/images/posts/archive/cdm-model-a.png"&gt;&lt;/p&gt;
&lt;p&gt;The second layer, Layer B, normalizes the data sent in by the Layer A sensors and scanners. This serves as the correlation point.&lt;/p&gt;
&lt;p&gt;&lt;img alt="CDM model layer b" src="https://ansible.com/images/posts/archive/cdm-model-b.png"&gt;&lt;/p&gt;
&lt;p&gt;After normalization, the data is fed up into the C&amp;amp;D layers that consist of agency level and federal level dashboards.&lt;/p&gt;
&lt;p&gt;&lt;img alt="CDM model layer c" src="https://ansible.com/images/posts/archive/cdm-model-c.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Source:&lt;/strong&gt; &lt;a href="https://www.youtube.com/watch?v=BPR_sTWgjPc"&gt;CISA's YouTube channel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Agency security personnel then reviews the dashboards and makes decisions on prioritizing and mitigating the alerts.&lt;/p&gt;
&lt;h3&gt;Ansible for security automation&lt;/h3&gt;
&lt;p&gt;Ansible has been a leader in the infrastructure automation domain for
years now. The value that Ansible brings to the infrastructure domain
easily translates into the security automation space, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Increases speed:&lt;/strong&gt; Reduce the number of manual steps and
    GUI-clicks. Enables the integration between numerous security
    solutions at the agency.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reduces human errors:&lt;/strong&gt; Minimizes risk with automated workflows
    and human operator errors in time-sensitive, stressful situations.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enforces consistency:&lt;/strong&gt; Enables auditable and verifiable security
    processes by using a single framework across multiple security
    tools.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The scale and complexity of the modern infrastructure that needs to be
protected in combination with the challenge of speed brought by modern
cyberattacks using automation themselves require technology to support
human operators. The challenges for cybersecurity teams is managing
multiple security tools within the CDM architecture,integrating between
the tools and using the tool data to effectively manage changes to their
end-points.&lt;/p&gt;
&lt;h3&gt;Ansible for the CDM use case&lt;/h3&gt;
&lt;p&gt;CDM has an opinionated architecture and an &lt;a href="https://www.gsa.gov/technology/technology-products-services/it-security/continuous-diagnostics-mitigation-cdm/buy-continuous-diagnostics-and-mitigation-tools"&gt;approved product
list&lt;/a&gt;
of over 240,000 products that agencies can use. You can imagine the
integration needs for CDM implementations across agencies for the
different products involved. Red Hat Ansible Automation Platform is one
of the approved products sanctioned for the CDM use case. So where does
Ansible fit in this four layered CDM model? Let's take a look at layer A
that consists of sensor and scanners:&lt;/p&gt;
&lt;p&gt;&lt;img alt="CDM Ansible" src="https://ansible.com/images/posts/archive/cdm-ansible-fit.png"&gt;&lt;/p&gt;
&lt;p&gt;The two use cases that are immediately apparent for this layer are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Log enrichment&lt;/li&gt;
&lt;li&gt;Fingerprint/signature updates&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Each time the security operations center (SOC) needs to triage an
incident, they might need increased verbosity of logs from the sensors
or from the endpoint themselves. Typically this eliminates potential
false positives. Doing this manually means SOC personnel have to log in
and make these configuration changes. Doing this at scale across an
agency can be manually intensive and prone to human error. And of course
after investigation these log levels need to be reset to standard! Using
Ansible to automatically turn on log enrichment during the investigation
and subsequently turn off the verbosity at scale is an effective use
case for the CDM layer A sensors and scanners. &lt;/p&gt;
&lt;p&gt;Scanners and sensors that make up layer A will need timely updates to
fingerprints based on newer attack vectors. Imagine having to manually
update these fingerprints across thousands of sensors! Ansible can be a
good solution to automate this Day 2 operational task needed for layer A.&lt;/p&gt;
&lt;p&gt;What about layer B? If you recall, layer B collates the logs from layer
A and normalizes the data along with correlating it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="CDM model layer b with Ansible" src="https://ansible.com/images/posts/archive/cdm-model-b-ansible.png"&gt;&lt;/p&gt;
&lt;p&gt;These devices are servers, which are subject to all the traditional Day
2 operations that automation can help, such as patching, OS upgrades,
and software updates. &lt;/p&gt;
&lt;p&gt;Finally, the C and D layers serve dashboards that a SOC personnel
reviews and acts on. &lt;/p&gt;
&lt;p&gt;&lt;img alt="CDM dashboard with Ansible" src="https://ansible.com/images/posts/archive/cdm-dash-ansible.png"&gt;&lt;/p&gt;
&lt;p&gt;Having Ansible Playbooks to mitigate known vulnerabilities could be
leveraged at this layer with API integration with automation controller
. Ansible is a proven multi-vendor automation platform. Agencies could
adopt automated mitigation for known vulnerabilities by firing off an
automation request to Ansible. Another use case is automating some
aspects of triage coordination. For example, if multiple teams are
needed to look into a certain alert, Ansible could fire off tickets
automatically to the appropriate teams who can then start their triage
(and even use Ansible for that triage process).&lt;/p&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;In summary, CDM is an opinionated security framework laid out by CISA
and adopted by agencies as a way to address cybersecurity and threat
response. CDM prescribes an approved list of products, which include
Ansible Automation Platform, that agencies can leverage. Ansible
Automation Platform can be a valuable platform for automating the
different layers of CDM. Benefits include:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Sensors and scanners: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Log enrichment&lt;/li&gt;
&lt;li&gt;Update signatures&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Integration layer: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Patching&lt;/li&gt;
&lt;li&gt;Day 2 Operations&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Mitigation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Automated mitigation&lt;/li&gt;
&lt;li&gt;Triage coordination&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</description><guid>https://ansible.com/blog/continuous-detection-and-mitigation-cdm/</guid><pubDate>Mon, 09 May 2022 00:00:00 GMT</pubDate></item><item><title>Installing and using collections on Ansible Tower</title><link>https://ansible.com/blog/installing-and-using-collections-on-ansible-tower/</link><dc:creator>Ajay Chenampara</dc:creator><description>&lt;h2&gt;Installing and using collections on Ansible Tower&lt;/h2&gt;
&lt;p&gt;Ansible Collections are the new way to distribute and manage content.
Ansible content can be modules, roles, plugins and even Ansible
Playbooks. In my previous blog, I
provide a walkthrough of using Ansible Collections from Ansible Galaxy
and Automation Hub.  Ansible Galaxy is the upstream community for
sharing Ansible Collections.  Any community user can create a namespace
and share content with anyone. Access to Automation Hub is included with
a Red Hat Ansible Automation Platform subscription. Automation Hub only
contains fully supported and certified content from Red Hat and our
partners.&lt;/p&gt;
&lt;p&gt;In this blog post we'll walk through using Ansible Collections with
Ansible Tower, part of the Red Hat Ansible Automation Platform.  There
are a few differences between using command-line Ansible for syncing
with Ansible Galaxy or the Automation Hub versus using Ansible Tower.
However, it is really easy and I will show you how!&lt;/p&gt;
&lt;h3&gt;Accessing collections content from Automation Hub and Galaxy from Ansible Tower.&lt;/h3&gt;
&lt;p&gt;If the Ansible Collections are included in your project you do not need
to authenticate to Automation Hub. This method is where you are
downloading dynamically using a requirements file.
In general there are three strategies for using Ansible Collections with
your environment:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install the collection into your runtime environment or virtual
    environment&lt;/li&gt;
&lt;li&gt;Provide the collection as part of your SCM tree &lt;/li&gt;
&lt;li&gt;Use a requirements file&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When accessing content from Automation Hub, the authentication token and
authentication URL configuration has to be made in Ansible Tower's
settings. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note: Even if you have the authorization details in your ansible.cfg
file within the project repo, it will not be picked up by Ansible Tower.
You will need to enter these details in the Ansible Tower settings&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;In order to do this, navigate to the &lt;em&gt;Settings &amp;gt; Jobs&lt;/em&gt;  sidebar link
from the Ansible Tower administration section.&lt;/p&gt;
&lt;p&gt;&lt;img alt="tower jobs ui" src="https://ansible.com/images/posts/archive/tower-jobs-ui.png"&gt;&lt;/p&gt;
&lt;p&gt;Click on &lt;em&gt;Jobs&lt;/em&gt; and update the following fields:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;PRIMARY GALAXY SERVER URL: &lt;code&gt;https://cloud.redhat.com/api/automation-hub/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;PRIMARY GALAXY AUTHENTICATION URL: &lt;code&gt;https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;PRIMARY GALAXY SERVER TOKEN: &lt;code&gt;xxxxxxxxxxxxxxxxxxxxxxxxx......&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Red Hat recommends using Automation Hub for your primary Galaxy Server URL to ensure you are using certified content that is fully supported via your Red Hat Ansible Automation Platform subscription&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="tower ui screenshot" src="https://ansible.com/images/posts/archive/tower-galaxy-connect-parameters.png"&gt;&lt;/p&gt;
&lt;p&gt;This is the only step you need to do in Ansible Tower in order to
download the certified collection from Automation Hub which was defined
in the &lt;em&gt;collections/requirements.yml&lt;/em&gt; file.&lt;/p&gt;
&lt;p&gt;The playbook is invoked via a job template as usual.&lt;/p&gt;
&lt;p&gt;&lt;img alt="tower ui screenshot" src="https://ansible.com/images/posts/archive/tower-ui-demo-collections.png"&gt;&lt;/p&gt;
&lt;p&gt;Launching this job template results in the collections being pulled down
from Automation Hub and Galaxy and invoking modules made available
through those collections.&lt;/p&gt;
&lt;p&gt;&lt;img alt="ajay collections" src="https://ansible.com/images/posts/archive/ajay-blog-collections.png"&gt;&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Ansible Collections introduce a way to modularize and package automation
content effectively. The Red Hat Automation Hub hosts certified
collections that are validated and supported by Red Hat. Ansible Galaxy
hosts community contributed collections. Customers can access
collections from both content repositories. I think of collections as
superchargers to the "batteries included" approach that Ansible takes.
It up-levels the nuances involved in building out automation, allowing
users to plug-n-play the latest and greatest automation content being
built by certified partners and the community.&lt;/p&gt;</description><guid>https://ansible.com/blog/installing-and-using-collections-on-ansible-tower/</guid><pubDate>Wed, 01 Jul 2020 00:00:00 GMT</pubDate></item><item><title>Hands on with Ansible collections</title><link>https://ansible.com/blog/hands-on-with-ansible-collections/</link><dc:creator>Ajay Chenampara</dc:creator><description>&lt;h2&gt;Hands on with Ansible collections&lt;/h2&gt;
&lt;p&gt;Ansible collections have been introduced previously through two of our
blogs "Getting Started with Ansible Content Collections"
and "The Future of Ansible Content Delivery".
In essence, Ansible Automation content is going to be delivered using
the collection packaging mechanism.  Ansible Content refers to Ansible
Playbooks, modules, module utilities and plugins. Basically all the
Ansible tools that users use to create their Ansible Automation. Content
is divided between two repositories:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ansible Galaxy
    (&lt;a href="https://galaxy.ansible.com/"&gt;https://galaxy.ansible.com&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Automation Hub (&lt;a href="https://cloud.redhat.com/ansible/automation-hub"&gt;https://cloud.redhat.com/ansible/automation-hub&lt;/a&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ansible Galaxy is the upstream community for sharing Ansible
Collections.  Any community user can create a namespace and share
content with anyone. Access to Automation Hub is included with a Red Hat
Ansible Automation Platform subscription.  Automation Hub only contains
fully supported and certified content from Red Hat and our partners.
This makes it easier for Red Hat customers to determine which content is
the official certified, and importantly supported, content.  This
includes full content from partners such as Arista, Cisco, Checkpoint,
F5, IBM, Microsoft and NetApp. &lt;/p&gt;
&lt;p&gt;In this blog post we\'ll walk through a use case wherein, the user would
like to use a Red Hat certified collection from Automation Hub and also
use a community supported collection from Ansible Galaxy.&lt;/p&gt;
&lt;p&gt;There are different ways to interact with Ansible Collections and your
Ansible Automation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install into your runtime environment or virtual env&lt;/li&gt;
&lt;li&gt;Provide as part of your SCM tree&lt;/li&gt;
&lt;li&gt;Using a requirements file&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Regardless of the method chosen, first you need to find, identity and
obtain the Ansible Collections you want to use.&lt;/p&gt;
&lt;h3&gt;Ansible Playbook repo structure:&lt;/h3&gt;
&lt;p&gt;Here is my setup for this demonstration of Ansible Collections:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ajay blog one" src="https://ansible.com/images/posts/archive/ajay-blog-one.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ansible.cfg is the Ansible configuration file.  I will elaborate on
    this in the next section.&lt;/li&gt;
&lt;li&gt;collections is a directory storing all Ansible Collections that my
    Ansible Playbook will use&lt;/li&gt;
&lt;li&gt;inventory is a directory containing a inventory file named hosts&lt;/li&gt;
&lt;li&gt;play.yaml is my Ansible Playbook&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For my example this is a development environment where I just want to
download the latest and greatest.  I will use a gitignore file to ignore
the downloaded content and only track the requirements file.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ajay blog two" src="https://ansible.com/images/posts/archive/ajay-blog-two.png"&gt;&lt;/p&gt;
&lt;p&gt;This gitignore file helps ensure that your playbook repository content
in the version control system only tracks your playbook and related
files.  If you want to track Ansible Collections being used in your SCM
just remove the Git ignore (e.g. the &lt;strong&gt;2- Provide as part of your SCM
tree&lt;/strong&gt; in the introduction).  For a more in-depth look into using
collections and the folder structure please refer to the
&lt;a href="https://docs.ansible.com/ansible/latest/user_guide/collections_using.html#using-collections"&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Configuring access to Automation Hub and Galaxy&lt;/h3&gt;
&lt;p&gt;For accessing certified content from the Automation Hub, you will need
to first get the token for authentication. Do this by logging into
&lt;a href="https://cloud.redhat.com/"&gt;https://cloud.redhat.com&lt;/a&gt; and then
navigating to &lt;a href="https://cloud.redhat.com/ansible/automation-hub/token"&gt;https://cloud.redhat.com/ansible/automation-hub/token&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;img alt="Ajay blog three" src="https://ansible.com/images/posts/archive/ajay-blog-three.png"&gt;&lt;/p&gt;
&lt;p&gt;Clicking on the &lt;code&gt;Load token&lt;/code&gt; button will reveal your
authentication token. Save this information somewhere, we will need to
enter this into the ansible.cfg file. Ansible Galaxy also has an API
token used for authentication and can be accessed by navigating to
&lt;a href="https://galaxy.ansible.com/me/preferences"&gt;https://galaxy.ansible.com/me/preferences&lt;/a&gt; after logging in.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ajay blog five" src="https://ansible.com/images/posts/archive/ajay-blog-five.png"&gt;&lt;/p&gt;
&lt;p&gt;Click on the &lt;code&gt;Show API key&lt;/code&gt; button to reveal your API key.&lt;/p&gt;
&lt;h3&gt;Configuring your Ansible.cfg&lt;/h3&gt;
&lt;p&gt;We define the Galaxy servers under the &lt;strong&gt;[galaxy]&lt;/strong&gt; section of the
Ansible configuration file (i.e. *ansible.cfg). * An Ansible
configuration file is an ini formatted file for configuring behavior
settings.  This includes settings such as changing the return output
from JSON to YAML. If you are unfamiliar with an Ansible configuration
file please refer to the
&lt;a href="https://docs.ansible.com/ansible/latest/installation_guide/intro_configuration.html"&gt;documentation&lt;/a&gt;. 
As a reminder the Ansible configuration file is searched in the
following order:\&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ansible.cfg (in the current directory)&lt;/li&gt;
&lt;li&gt;\~/.ansible.cfg (in the current home directory)&lt;/li&gt;
&lt;li&gt;/etc/ansible/ansible.cfg &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These tokens should be added now to the ansible.cfg file. An example of
this is shown below.  It is recommended when using more than one Galaxy
server to list them in server_list. The list should be in precedence
order with your primary location choice first, in this case Automation
Hub.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;defaults&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;stdout_callback = yaml&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;inventory = inventory/hosts&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;collections_paths = ./collections&lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;[galaxy]&lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;server_list = automation_hub, release_galaxy&lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;[galaxy_server.automation_hub]&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;url=https://cloud.redhat.com/api/automation-hub/&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;auth_url=https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;token=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span&gt;

&lt;span class="l l-Scalar l-Scalar-Plain"&gt;[galaxy_server.release_galaxy]&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;url=https://galaxy.ansible.com/&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;token=xxxxxxxxxxxxxxxxxxxxxx&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note the &lt;em&gt;url&lt;/em&gt; and &lt;em&gt;auth_url&lt;/em&gt; keys that define the Automation Hub
repository and authentication endpoint. Also note that this file defines
where the collections should be downloaded to via the collections_paths
parameter (e.g.. ./collections).  For more information on configuration
for Ansible Galaxy and Automation Hub please refer to the
&lt;a href="https://docs.ansible.com/ansible/latest/galaxy/user_guide.html#galaxy-user-guide"&gt;Galaxy User Guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Using a requirements file&lt;/h3&gt;
&lt;p&gt;For this example I am going to use the requirements.yml method where I
can install all the collections from a single list. If you are familiar
with the use of &lt;em&gt;requirements.yml&lt;/em&gt;  file with roles, the file is very
similar for collections. This is best understood through an example:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;» cat collections/requirements.yml&lt;/span&gt;
&lt;span class="l l-Scalar l-Scalar-Plain"&gt;collections&lt;/span&gt;&lt;span class="p p-Indicator"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;junipernetworks.junos&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;https://galaxy.ansible.com&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;f5networks.f5_modules&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;source&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;https://cloud.redhat.com/api/automation-hub/&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here, we defined 2 collections that are needed for our test playbook.
The Juniper Networks &lt;em&gt;junos&lt;/em&gt; collection is being downloaded from Ansible
Galaxy whereas the F5 Networks &lt;em&gt;f5_modules collection&lt;/em&gt; is being
downloaded from Automation Hub.&lt;/p&gt;
&lt;h3&gt;Installing the collections&lt;/h3&gt;
&lt;p&gt;The collections can now be installed using the command:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ansible-galaxy collection install -r collections/requirements.yml&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Running this command in verbose mode helps us look at the endpoints
being accessed:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ajay Blog seven" src="https://ansible.com/images/posts/archive/ajay-blog-seven.png"&gt;&lt;/p&gt;
&lt;p&gt;To test the availability of modules from these new collections, you can
use the &lt;em&gt;ansible-doc&lt;/em&gt; command:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ansible-doc f5networks.f5_modules.bigip_device_info&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Our simple playbook will collect facts from the Juniper and F5 device
(&lt;a href="https://github.com/termlen0/collections_demo/blob/master/play.yaml"&gt;https://github.com/termlen0/collections_demo/blob/master/play.yaml&lt;/a&gt;).
We can test the playbook by running it from the command line:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Ajay blog eight" src="https://ansible.com/images/posts/archive/ajay-blog-eight.png"&gt;&lt;/p&gt;
&lt;p&gt;If you don\'t want to dynamically load the latest collection content
every time, comment out or remove the requirements file.  This means you
can control which Ansible Collections are available by manually
installing each collection required for your Ansible Playbook into the
correct virtual environment.  For example to install the F5 Networks
collections you would perform this command:&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ansible-galaxy collection install f5networks.f5_modules&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Another way would be to package the required collections in your SCM
(source control management) with your other content.  This means you
would sync collections in your development environment versus the
Ansible Tower device.&lt;/p&gt;
&lt;p&gt;In the future we will introduce a more standardized way around packaging
collections and a particular Ansible version and its dependencies.  &lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Ansible Collections introduce a way to modularize and package automation
content effectively. Red Hat Automation Hub hosts certified, secure
collections that are validated and supported by Red Hat. Ansible Galaxy
hosts community contributed collections. Customers can access
collections from both content repositories. I think of collections as a
superchargers to the "batteries included" approach that Ansible takes.
It up-levels the nuances involved in building out automation, allowing
users to plug-n-play the latest and greatest automation content being
built by certified partners and the community.&lt;/p&gt;</description><guid>https://ansible.com/blog/hands-on-with-ansible-collections/</guid><pubDate>Tue, 24 Mar 2020 00:00:00 GMT</pubDate></item></channel></rss>